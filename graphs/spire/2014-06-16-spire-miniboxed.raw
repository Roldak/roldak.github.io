sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
> benchmark/run
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 19

[info] Running spire.benchmark.FibBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=IntFibJava} 2.17 ns; σ=0.02 ns @ 4 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=IntFibScala} 2.23 ns; σ=0.01 ns @ 3 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=IntFibGen} 43.10 ns; σ=0.23 ns @ 3 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=LongFibJava} 68.32 ns; σ=0.53 ns @ 3 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=LongFibScala} 65.76 ns; σ=0.65 ns @ 9 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=LongFibGen} 66.11 ns; σ=0.76 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=BigIntegerFibJava} 23149.14 ns; σ=172.24 ns @ 3 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=BigIntegerFibGen} 26402.87 ns; σ=116.75 ns @ 3 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=BigIntFibScala} 24114.22 ns; σ=148.77 ns @ 3 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=BigIntFibGen} 26056.76 ns; σ=147.21 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=NaturalFibGen} 15116.01 ns; σ=143.90 ns @ 9 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=SpireFib} 6360.77 ns; σ=54.47 ns @ 3 trials
[info]
[info]         benchmark       ns linear runtime
[info]        IntFibJava     2.17 =
[info]       IntFibScala     2.23 =
[info]         IntFibGen    43.10 =
[info]       LongFibJava    68.32 =
[info]      LongFibScala    65.76 =
[info]        LongFibGen    66.11 =
[info] BigIntegerFibJava 23149.14 ==========================
[info]  BigIntegerFibGen 26402.87 ==============================
[info]    BigIntFibScala 24114.22 ===========================
[info]      BigIntFibGen 26056.76 =============================
[info]     NaturalFibGen 15116.01 =================
[info]          SpireFib  6360.77 =======
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 134 s, completed Jun 17, 2014 12:51:15 PM
> sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 13

[info] Running spire.benchmark.Mo5Benchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=HBMo5} 38052095.92 ns; σ=268260.19 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=MMo5} 47675575.23 ns; σ=258380.43 ns @ 3 trials
[info]
[info] benchmark   ms linear runtime
[info]     HBMo5 38.1 =======================
[info]      MMo5 47.7 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 57 s, completed Jun 17, 2014 12:59:03 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 11

[info] Running spire.benchmark.PolynomialBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[error]   Failed to execute java -cp /mnt/data1/Work/Workspace/dev/spire.mbox/benchmark/target/scala-2.11/classes:/mnt/data1/Work/Workspace/dev/spire.mbox/core/target/scala-2.11/classes:/mnt/data1/Work/Workspace/dev/spire.mbox/macros/target/scala-2.11/classes:/home/sun/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar:/home/sun/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar:/home/sun/.ivy2/cache/org.scala-miniboxing.plugins/miniboxing-runtime_2.11/jars/miniboxing-runtime_2.11-0.3-SNAPSHOT.jar:/home/sun/.ivy2/cache/org.apfloat/apfloat/jars/apfloat-1.6.3.jar:/home/sun/.ivy2/cache/org.jscience/jscience/jars/jscience-4.3.1.jar:/home/sun/.ivy2/cache/org.javolution/javolution/jars/javolution-5.2.3.jar:/home/sun/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.2.jar:/home/sun/.ivy2/cache/ichi.bench/thyme/jars/thyme-0.1.0.jar:/home/sun/.ivy2/cache/com.google.guava/guava/jars/guava-r09.jar:/home/sun/.ivy2/cache/com.google.code.java-allocation-instrumenter/java-allocation-instrumenter/jars/java-allocation-instrumenter-2.0.jar:/home/sun/.ivy2/cache/asm/asm/jars/asm-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-analysis/jars/asm-analysis-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-tree/jars/asm-tree-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-commons/jars/asm-commons-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-util/jars/asm-util-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-xml/jars/asm-xml-3.3.1.jar:/home/sun/.ivy2/cache/com.google.code.caliper/caliper/jars/caliper-1.0-SNAPSHOT.jar:/home/sun/.ivy2/cache/com.google.code.gson/gson/jars/gson-1.7.1.jar com.google.caliper.InProcessRunner --warmupMillis 3000 --runMillis 1000 --measurementType TIME --marker //ZxJ/ -Dbenchmark=AddSpireRationalPolysSparse -Dsize=1 spire.benchmark.PolynomialBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[error] starting Scenario{vm=java, trial=0, benchmark=AddSpireRationalPolysSparse, size=1}
[error] [caliper] [starting warmup]
[error] Exception in thread "main" java.lang.AbstractMethodError: spire.std.IntAlgebra.spire|algebra|Order_J|A_TypeTag()B
[error]   at spire.algebra.Order_J$class.on(Order.scala)
[error]   at spire.std.IntAlgebra.on(int.scala:94)
[error]   at spire.syntax.std.ArrayOps_L.qsortBy_n_J(Ops.scala:132)
[error]   at spire.math.poly.PolySparse$.apply(PolySparse.scala:218)
[error]   at spire.math.Polynomial$.sparse(Polynomial.scala:40)
[error]   at spire.math.poly.PolyDense_L.toSparse(PolyDense.scala:21)
[error]   at spire.benchmark.PolynomialBenchmarks$$anonfun$setUp$2.apply(PolynomialBenchmark.scala:37)
[error]   at spire.benchmark.PolynomialBenchmarks$$anonfun$setUp$2.apply(PolynomialBenchmark.scala:37)
[error]   at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
[error]   at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
[error]   at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
[error]   at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
[error]   at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
[error]   at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)
[error]   at spire.benchmark.PolynomialBenchmarks.setUp(PolynomialBenchmark.scala:37)
[error]   at com.google.caliper.SimpleBenchmark.createBenchmark(SimpleBenchmark.java:117)
[error]   at com.google.caliper.ScenarioSelection.createBenchmark(ScenarioSelection.java:116)
[error]   at com.google.caliper.InProcessRunner$1.get(InProcessRunner.java:61)
[error]   at com.google.caliper.InProcessRunner$1.get(InProcessRunner.java:1)
[error]   at com.google.caliper.TimeMeasurer.warmUp(TimeMeasurer.java:61)
[error]   at com.google.caliper.TimeMeasurer.run(TimeMeasurer.java:121)
[error]   at com.google.caliper.InProcessRunner.run(InProcessRunner.java:73)
[error]   at com.google.caliper.InProcessRunner.run(InProcessRunner.java:48)
[error]   at com.google.caliper.InProcessRunner.main(InProcessRunner.java:102)
[error]
[error] An exception was thrown from the benchmark code.
[error] com.google.caliper.ConfigurationException: Failed to execute java -cp /mnt/data1/Work/Workspace/dev/spire.mbox/benchmark/target/scala-2.11/classes:/mnt/data1/Work/Workspace/dev/spire.mbox/core/target/scala-2.11/classes:/mnt/data1/Work/Workspace/dev/spire.mbox/macros/target/scala-2.11/classes:/home/sun/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar:/home/sun/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar:/home/sun/.ivy2/cache/org.scala-miniboxing.plugins/miniboxing-runtime_2.11/jars/miniboxing-runtime_2.11-0.3-SNAPSHOT.jar:/home/sun/.ivy2/cache/org.apfloat/apfloat/jars/apfloat-1.6.3.jar:/home/sun/.ivy2/cache/org.jscience/jscience/jars/jscience-4.3.1.jar:/home/sun/.ivy2/cache/org.javolution/javolution/jars/javolution-5.2.3.jar:/home/sun/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.2.jar:/home/sun/.ivy2/cache/ichi.bench/thyme/jars/thyme-0.1.0.jar:/home/sun/.ivy2/cache/com.google.guava/guava/jars/guava-r09.jar:/home/sun/.ivy2/cache/com.google.code.java-allocation-instrumenter/java-allocation-instrumenter/jars/java-allocation-instrumenter-2.0.jar:/home/sun/.ivy2/cache/asm/asm/jars/asm-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-analysis/jars/asm-analysis-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-tree/jars/asm-tree-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-commons/jars/asm-commons-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-util/jars/asm-util-3.3.1.jar:/home/sun/.ivy2/cache/asm/asm-xml/jars/asm-xml-3.3.1.jar:/home/sun/.ivy2/cache/com.google.code.caliper/caliper/jars/caliper-1.0-SNAPSHOT.jar:/home/sun/.ivy2/cache/com.google.code.gson/gson/jars/gson-1.7.1.jar com.google.caliper.InProcessRunner --warmupMillis 3000 --runMillis 1000 --measurementType TIME --marker //ZxJ/ -Dbenchmark=AddSpireRationalPolysSparse -Dsize=1 spire.benchmark.PolynomialBenchmarks
[error]   at com.google.caliper.Runner.measure(Runner.java:307)
[error]   at com.google.caliper.Runner.runScenario(Runner.java:227)
[error]   at com.google.caliper.Runner.runOutOfProcess(Runner.java:376)
[error]   at com.google.caliper.Runner.run(Runner.java:95)
[error]   at com.google.caliper.Runner.main(Runner.java:421)
[error]   at com.google.caliper.Runner.main(Runner.java:433)
[error]   at spire.benchmark.MyRunner.main(Benchmark.scala:67)
[error]   at spire.benchmark.PolynomialBenchmarks.main(PolynomialBenchmark.scala)
[info]  0% Scenario{vm=java, trial=0, benchmark=AddSpireRationalPolysSparse, size=1}
java.lang.RuntimeException: Nonzero exit code returned from runner: 1
  at scala.sys.package$.error(package.scala:27)
[trace] Stack trace suppressed: run last benchmark/compile:run for the full output.
[error] (benchmark/compile:run) Nonzero exit code returned from runner: 1
[error] Total time: 50 s, completed Jun 17, 2014 1:01:44 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 7

[info] Running spire.benchmark.PowBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=LongPowForInt} 1901588.71 ns; σ=4490.42 ns @ 3 trials
[info] 14% Scenario{vm=java, trial=0, benchmark=DoublePowForInt} 16942096.77 ns; σ=36594.73 ns @ 3 trials
[info] 29% Scenario{vm=java, trial=0, benchmark=BigIntPowForInt} 19437728.26 ns; σ=176966.52 ns @ 3 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=LongPowForLong} 1685398.05 ns; σ=16843.52 ns @ 4 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=DoublePowForLong} 16759816.06 ns; σ=59414.00 ns @ 3 trials
[info] 71% Scenario{vm=java, trial=0, benchmark=BigIntPowForLong} 23050526.53 ns; σ=160910.36 ns @ 3 trials
[info] 86% Scenario{vm=java, trial=0, benchmark=DoublePowForDouble} 15840604.35 ns; σ=117903.98 ns @ 3 trials
[info]
[info]          benchmark    ms linear runtime
[info]      LongPowForInt  1.90 ==
[info]    DoublePowForInt 16.94 ======================
[info]    BigIntPowForInt 19.44 =========================
[info]     LongPowForLong  1.69 ==
[info]   DoublePowForLong 16.76 =====================
[info]   BigIntPowForLong 23.05 ==============================
[info] DoublePowForDouble 15.84 ====================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 85 s, completed Jun 17, 2014 1:03:37 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 9

[info] Running spire.benchmark.ComplexAddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect, size=500000} 4189849.37 ns; σ=130849.39 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric, size=500000} 4306090.94 ns; σ=38462.94 ns @ 4 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=AddFastComplexes, size=500000} 1561928.98 ns; σ=6050.85 ns @ 3 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesBoxed, size=500000} 2438339.69 ns; σ=93163.99 ns @ 10 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesUnboxed, size=500000} 1579074.43 ns; σ=3843.11 ns @ 3 trials
[info]
[info]                benchmark   ms linear runtime
[info]       AddComplexesDirect 4.19 =============================
[info]      AddComplexesGeneric 4.31 ==============================
[info]         AddFastComplexes 1.56 ==========
[info]   AddFloatComplexesBoxed 2.44 ================
[info] AddFloatComplexesUnboxed 1.58 ===========
[info]
[info] vm: java
[info] trial: 0
[info] size: 500000
[success] Total time: 83 s, completed Jun 17, 2014 1:08:40 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 14

[info] Running spire.benchmark.MapSemigroupBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=random} 54695.30 ns; σ=387.91 ns @ 3 trials
[info]  2% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=random} 53804.24 ns; σ=517.57 ns @ 8 trials
[info]  4% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=random} 63977.69 ns; σ=6819.14 ns @ 10 trials
[info]  6% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=random} 616498.65 ns; σ=5020.58 ns @ 3 trials
[info]  7% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=random} 701638.50 ns; σ=6535.60 ns @ 5 trials
[info]  9% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=random} 695262.85 ns; σ=4512.56 ns @ 3 trials
[info] 11% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=random} 852854.21 ns; σ=3584.35 ns @ 3 trials
[info] 13% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=random} 852530.63 ns; σ=3527.02 ns @ 3 trials
[info] 15% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=random} 839030.01 ns; σ=5949.25 ns @ 3 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=random} 1941625.06 ns; σ=26777.82 ns @ 10 trials
[info] 19% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=random} 2265477.31 ns; σ=40477.56 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=random} 1824129.29 ns; σ=5834.00 ns @ 3 trials
[info] 22% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=random} 5548625.97 ns; σ=15345.10 ns @ 3 trials
[info] 24% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=random} 5922862.99 ns; σ=11505.54 ns @ 3 trials
[info] 26% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=random} 5081559.45 ns; σ=8750.53 ns @ 3 trials
[info] 28% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=random} 9630773.37 ns; σ=41710.22 ns @ 3 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=random} 10637347.54 ns; σ=121500.64 ns @ 10 trials
[info] 31% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=random} 9511112.60 ns; σ=166541.46 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=sparse} 69738.95 ns; σ=656.18 ns @ 6 trials
[info] 35% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=sparse} 39451.10 ns; σ=603.68 ns @ 10 trials
[info] 37% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=sparse} 55457.04 ns; σ=905.79 ns @ 10 trials
[info] 39% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=sparse} 233851.41 ns; σ=2744.56 ns @ 10 trials
[info] 41% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=sparse} 220265.54 ns; σ=2130.46 ns @ 3 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=sparse} 228429.05 ns; σ=2121.41 ns @ 5 trials
[info] 44% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=sparse} 439486.47 ns; σ=3623.33 ns @ 3 trials
[info] 46% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=sparse} 495595.94 ns; σ=6748.72 ns @ 10 trials
[info] 48% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=sparse} 411944.25 ns; σ=1483.11 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=sparse} 893948.85 ns; σ=7766.52 ns @ 4 trials
[info] 52% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=sparse} 836949.94 ns; σ=7626.59 ns @ 3 trials
[info] 54% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=sparse} 872712.21 ns; σ=7559.39 ns @ 3 trials
[info] 56% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=sparse} 2632414.95 ns; σ=25672.85 ns @ 6 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=sparse} 2545835.49 ns; σ=42954.69 ns @ 10 trials
[info] 59% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=sparse} 2516954.15 ns; σ=24384.53 ns @ 4 trials
[info] 61% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=sparse} 7028993.37 ns; σ=158729.29 ns @ 10 trials
[info] 63% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=sparse} 6865119.51 ns; σ=79880.86 ns @ 10 trials
[info] 65% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=sparse} 6598384.07 ns; σ=66874.74 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=dense} 79939.16 ns; σ=510.71 ns @ 3 trials
[info] 69% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=dense} 80316.67 ns; σ=1255.50 ns @ 10 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=dense} 78582.50 ns; σ=8751.70 ns @ 10 trials
[info] 72% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=dense} 145448.39 ns; σ=1365.67 ns @ 3 trials
[info] 74% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=dense} 143045.39 ns; σ=2180.62 ns @ 10 trials
[info] 76% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=dense} 184823.99 ns; σ=487.98 ns @ 3 trials
[info] 78% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=dense} 726851.50 ns; σ=6802.19 ns @ 3 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=dense} 690910.89 ns; σ=6180.27 ns @ 3 trials
[info] 81% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=dense} 686986.05 ns; σ=1184.44 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=dense} 1545413.19 ns; σ=15411.04 ns @ 5 trials
[info] 85% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=dense} 1488957.96 ns; σ=34387.74 ns @ 10 trials
[info] 87% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=dense} 1540761.23 ns; σ=13958.14 ns @ 3 trials
[info] 89% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=dense} 5435258.03 ns; σ=53547.67 ns @ 8 trials
[info] 91% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=dense} 5284400.93 ns; σ=17805.19 ns @ 3 trials
[info] 93% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=dense} 5427009.45 ns; σ=19650.77 ns @ 3 trials
[info] 94% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=dense} 10568521.97 ns; σ=101936.34 ns @ 9 trials
[info] 96% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=dense} 10228135.23 ns; σ=27999.34 ns @ 3 trials
[info] 98% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=dense} 10442951.44 ns; σ=129946.94 ns @ 10 trials
[info]
[info] mapSize mapType      benchmark      us linear runtime
[info]       2  random AlgebirdMapAdd    54.7 =
[info]       2  random     BulkMapAdd    53.8 =
[info]       2  random       SpireAdd    64.0 =
[info]       2  sparse AlgebirdMapAdd    69.7 =
[info]       2  sparse     BulkMapAdd    39.5 =
[info]       2  sparse       SpireAdd    55.5 =
[info]       2   dense AlgebirdMapAdd    79.9 =
[info]       2   dense     BulkMapAdd    80.3 =
[info]       2   dense       SpireAdd    78.6 =
[info]       4  random AlgebirdMapAdd   616.5 =
[info]       4  random     BulkMapAdd   701.6 =
[info]       4  random       SpireAdd   695.3 =
[info]       4  sparse AlgebirdMapAdd   233.9 =
[info]       4  sparse     BulkMapAdd   220.3 =
[info]       4  sparse       SpireAdd   228.4 =
[info]       4   dense AlgebirdMapAdd   145.4 =
[info]       4   dense     BulkMapAdd   143.0 =
[info]       4   dense       SpireAdd   184.8 =
[info]       8  random AlgebirdMapAdd   852.9 ==
[info]       8  random     BulkMapAdd   852.5 ==
[info]       8  random       SpireAdd   839.0 ==
[info]       8  sparse AlgebirdMapAdd   439.5 =
[info]       8  sparse     BulkMapAdd   495.6 =
[info]       8  sparse       SpireAdd   411.9 =
[info]       8   dense AlgebirdMapAdd   726.9 ==
[info]       8   dense     BulkMapAdd   690.9 =
[info]       8   dense       SpireAdd   687.0 =
[info]      16  random AlgebirdMapAdd  1941.6 =====
[info]      16  random     BulkMapAdd  2265.5 ======
[info]      16  random       SpireAdd  1824.1 =====
[info]      16  sparse AlgebirdMapAdd   893.9 ==
[info]      16  sparse     BulkMapAdd   836.9 ==
[info]      16  sparse       SpireAdd   872.7 ==
[info]      16   dense AlgebirdMapAdd  1545.4 ====
[info]      16   dense     BulkMapAdd  1489.0 ====
[info]      16   dense       SpireAdd  1540.8 ====
[info]      32  random AlgebirdMapAdd  5548.6 ===============
[info]      32  random     BulkMapAdd  5922.9 ================
[info]      32  random       SpireAdd  5081.6 ==============
[info]      32  sparse AlgebirdMapAdd  2632.4 =======
[info]      32  sparse     BulkMapAdd  2545.8 =======
[info]      32  sparse       SpireAdd  2517.0 =======
[info]      32   dense AlgebirdMapAdd  5435.3 ===============
[info]      32   dense     BulkMapAdd  5284.4 ==============
[info]      32   dense       SpireAdd  5427.0 ===============
[info]      64  random AlgebirdMapAdd  9630.8 ===========================
[info]      64  random     BulkMapAdd 10637.3 ==============================
[info]      64  random       SpireAdd  9511.1 ==========================
[info]      64  sparse AlgebirdMapAdd  7029.0 ===================
[info]      64  sparse     BulkMapAdd  6865.1 ===================
[info]      64  sparse       SpireAdd  6598.4 ==================
[info]      64   dense AlgebirdMapAdd 10568.5 =============================
[info]      64   dense     BulkMapAdd 10228.1 ============================
[info]      64   dense       SpireAdd 10443.0 =============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 639 s, completed Jun 17, 2014 1:23:29 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 15

[info] Running spire.benchmark.GcdBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=XorEuclidGcdLong} 98609282.30 ns; σ=2170159.89 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=XorBinaryGcdLong} 41254658.58 ns; σ=146965.14 ns @ 3 trials
[info]
[info]        benchmark   ms linear runtime
[info] XorEuclidGcdLong 98.6 ==============================
[info] XorBinaryGcdLong 41.3 ============
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 38 s, completed Jun 17, 2014 1:47:52 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 6

[info] Running spire.benchmark.AddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddIntsDirect} 93203.28 ns; σ=526.71 ns @ 3 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIntsGeneric} 92660.74 ns; σ=419.87 ns @ 3 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddLongsDirect} 66250.92 ns; σ=1510.46 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddLongsGeneric} 67026.03 ns; σ=3244.21 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddFloatsDirect} 197210.79 ns; σ=1331.70 ns @ 3 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddFloatsGeneric} 200540.34 ns; σ=3906.55 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddDoublesDirect} 201819.99 ns; σ=2955.64 ns @ 10 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddDoublesGeneric} 203790.72 ns; σ=4883.36 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddMaybeDoublesDirect} 5372904.99 ns; σ=198104.94 ns @ 10 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect} 1594037.93 ns; σ=173362.29 ns @ 10 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric} 1400014.63 ns; σ=73864.29 ns @ 10 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddFastComplexes} 648305.03 ns; σ=4481.29 ns @ 3 trials
[info]
[info]             benchmark     us linear runtime
[info]         AddIntsDirect   93.2 =
[info]        AddIntsGeneric   92.7 =
[info]        AddLongsDirect   66.3 =
[info]       AddLongsGeneric   67.0 =
[info]       AddFloatsDirect  197.2 =
[info]      AddFloatsGeneric  200.5 =
[info]      AddDoublesDirect  201.8 =
[info]     AddDoublesGeneric  203.8 =
[info] AddMaybeDoublesDirect 5372.9 ==============================
[info]    AddComplexesDirect 1594.0 ========
[info]   AddComplexesGeneric 1400.0 =======
[info]      AddFastComplexes  648.3 ===
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 191 s, completed Jun 17, 2014 1:56:36 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 22

[info] Running spire.benchmark.RexBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=Direct, pow=10} 45537.67 ns; σ=1777.37 ns @ 10 trials
[info] 10% Scenario{vm=java, trial=0, benchmark=Generic, pow=10} 229613.60 ns; σ=1063.30 ns @ 3 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=Direct, pow=12} 152760.54 ns; σ=2506.25 ns @ 10 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=Generic, pow=12} 704764.32 ns; σ=11100.79 ns @ 10 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=Direct, pow=14} 622903.22 ns; σ=1699.55 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=Generic, pow=14} 1253030.98 ns; σ=2670.80 ns @ 3 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=Direct, pow=16} 2076015.47 ns; σ=13939.17 ns @ 3 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=Generic, pow=16} 4256039.70 ns; σ=21473.91 ns @ 3 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=Direct, pow=18} 9499593.54 ns; σ=91794.33 ns @ 8 trials
[info] 90% Scenario{vm=java, trial=0, benchmark=Generic, pow=18} 17181425.30 ns; σ=130055.27 ns @ 3 trials
[info]
[info] pow benchmark      us linear runtime
[info]  10    Direct    45.5 =
[info]  10   Generic   229.6 =
[info]  12    Direct   152.8 =
[info]  12   Generic   704.8 =
[info]  14    Direct   622.9 =
[info]  14   Generic  1253.0 ==
[info]  16    Direct  2076.0 ===
[info]  16   Generic  4256.0 =======
[info]  18    Direct  9499.6 ================
[info]  18   Generic 17181.4 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 120 s, completed Jun 17, 2014 2:04:21 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.mbox/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.mbox/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.SortingBenchmarks
 [2] spire.benchmark.RatComparisonBenchmarks
 [3] spire.benchmark.RationalBenchmarks
 [4] spire.benchmark.NaturalBenchmarks
 [5] spire.benchmark.ScalaVsSpireBenchmarks
 [6] spire.benchmark.AddBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.AnyValSubtractBenchmarks
 [9] spire.benchmark.ComplexAddBenchmarks
 [10] spire.benchmark.AnyValAddBenchmarks
 [11] spire.benchmark.PolynomialBenchmarks
 [12] spire.benchmark.ArrayOrderBenchmarks
 [13] spire.benchmark.Mo5Benchmarks
 [14] spire.benchmark.MapSemigroupBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.CForBenchmarks
 [17] spire.benchmark.JuliaBenchmarks
 [18] spire.benchmark.RandomBenchmarks
 [19] spire.benchmark.FibBenchmarks
 [20] spire.benchmark.MaybeAddBenchmarks
 [21] spire.benchmark.SelectionBenchmarks
 [22] spire.benchmark.RexBenchmarks

Enter number: 12

[info] Running spire.benchmark.ArrayOrderBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=6} 45.66 ns; σ=1.58 ns @ 10 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=6} 39.96 ns; σ=0.83 ns @ 10 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=6} 37.61 ns; σ=2.80 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=10} 5288.42 ns; σ=166.31 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=10} 5118.07 ns; σ=52.91 ns @ 10 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=10} 406.23 ns; σ=2.44 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=14} 76713.37 ns; σ=766.73 ns @ 3 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=14} 77018.12 ns; σ=273.36 ns @ 3 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=14} 8184.15 ns; σ=73.89 ns @ 3 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=18} 1389458.00 ns; σ=11032.05 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=18} 1386325.79 ns; σ=7757.06 ns @ 3 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=18} 207802.01 ns; σ=2139.43 ns @ 10 trials
[info]
[info] pow   benchmark        ns linear runtime
[info]   6  AddGeneric      45.7 =
[info]   6 AddIndirect      40.0 =
[info]   6   AddDirect      37.6 =
[info]  10  AddGeneric    5288.4 =
[info]  10 AddIndirect    5118.1 =
[info]  10   AddDirect     406.2 =
[info]  14  AddGeneric   76713.4 =
[info]  14 AddIndirect   77018.1 =
[info]  14   AddDirect    8184.1 =
[info]  18  AddGeneric 1389458.0 ==============================
[info]  18 AddIndirect 1386325.8 =============================
[info]  18   AddDirect  207802.0 ====
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 158 s, completed Jun 17, 2014 2:13:35 PM
sun@sun-cpu:~/workspace/dev/spire.mbox(miniboxed)$


------------------------------------------------------------------------------------------------------------------------


sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 5

[info] Running spire.benchmark.FibBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=IntFibJava} 2.18 ns; σ=0.03 ns @ 10 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=IntFibScala} 2.19 ns; σ=0.02 ns @ 7 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=IntFibGen} 2.17 ns; σ=0.03 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=LongFibJava} 68.07 ns; σ=0.30 ns @ 3 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=LongFibScala} 65.80 ns; σ=0.86 ns @ 10 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=LongFibGen} 66.22 ns; σ=0.64 ns @ 6 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=BigIntegerFibJava} 23384.03 ns; σ=65.70 ns @ 3 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=BigIntegerFibGen} 26296.16 ns; σ=262.60 ns @ 3 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=BigIntFibScala} 24067.22 ns; σ=173.60 ns @ 3 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=BigIntFibGen} 26368.26 ns; σ=193.90 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=NaturalFibGen} 15326.11 ns; σ=75.62 ns @ 3 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=SpireFib} 6382.84 ns; σ=22.15 ns @ 3 trials
[info]
[info]         benchmark       ns linear runtime
[info]        IntFibJava     2.18 =
[info]       IntFibScala     2.19 =
[info]         IntFibGen     2.17 =
[info]       LongFibJava    68.07 =
[info]      LongFibScala    65.80 =
[info]        LongFibGen    66.22 =
[info] BigIntegerFibJava 23384.03 ==========================
[info]  BigIntegerFibGen 26296.16 =============================
[info]    BigIntFibScala 24067.22 ===========================
[info]      BigIntFibGen 26368.26 ==============================
[info]     NaturalFibGen 15326.11 =================
[info]          SpireFib  6382.84 =======
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 154 s, completed Jun 17, 2014 12:54:17 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 9

[info] Running spire.benchmark.Mo5Benchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=HBMo5} 29838288.39 ns; σ=74330.23 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=MMo5} 32585215.67 ns; σ=145239.48 ns @ 3 trials
[info]
[info] benchmark   ms linear runtime
[info]     HBMo5 29.8 ===========================
[info]      MMo5 32.6 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 28 s, completed Jun 17, 2014 12:59:43 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 7

[info] Running spire.benchmark.PowBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=LongPowForInt} 1889872.05 ns; σ=7317.18 ns @ 3 trials
[info] 14% Scenario{vm=java, trial=0, benchmark=DoublePowForInt} 16878622.07 ns; σ=156724.68 ns @ 3 trials
[info] 29% Scenario{vm=java, trial=0, benchmark=BigIntPowForInt} 18643041.80 ns; σ=90024.18 ns @ 3 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=LongPowForLong} 1660020.29 ns; σ=5087.60 ns @ 3 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=DoublePowForLong} 16862787.06 ns; σ=120270.20 ns @ 3 trials
[info] 71% Scenario{vm=java, trial=0, benchmark=BigIntPowForLong} 22631951.57 ns; σ=200411.82 ns @ 4 trials
[info] 86% Scenario{vm=java, trial=0, benchmark=DoublePowForDouble} 15943773.97 ns; σ=146446.65 ns @ 4 trials
[info]
[info]          benchmark    ms linear runtime
[info]      LongPowForInt  1.89 ==
[info]    DoublePowForInt 16.88 ======================
[info]    BigIntPowForInt 18.64 ========================
[info]     LongPowForLong  1.66 ==
[info]   DoublePowForLong 16.86 ======================
[info]   BigIntPowForLong 22.63 ==============================
[info] DoublePowForDouble 15.94 =====================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 66 s, completed Jun 17, 2014 1:04:59 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 13

[info] Running spire.benchmark.ComplexAddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect, size=500000} 3682585.28 ns; σ=11492.64 ns @ 3 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric, size=500000} 5204294.47 ns; σ=66913.81 ns @ 10 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=AddFastComplexes, size=500000} 1565845.81 ns; σ=5079.11 ns @ 3 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesBoxed, size=500000} 2421706.18 ns; σ=68181.50 ns @ 10 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesUnboxed, size=500000} 1579484.19 ns; σ=1894.04 ns @ 3 trials
[info]
[info]                benchmark   ms linear runtime
[info]       AddComplexesDirect 3.68 =====================
[info]      AddComplexesGeneric 5.20 ==============================
[info]         AddFastComplexes 1.57 =========
[info]   AddFloatComplexesBoxed 2.42 =============
[info] AddFloatComplexesUnboxed 1.58 =========
[info]
[info] vm: java
[info] trial: 0
[info] size: 500000
[success] Total time: 88 s, completed Jun 17, 2014 1:10:22 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 22

[info] Running spire.benchmark.MapSemigroupBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=random} 54412.16 ns; σ=610.34 ns @ 10 trials
[info]  2% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=random} 54640.98 ns; σ=358.94 ns @ 3 trials
[info]  4% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=random} 64151.11 ns; σ=7215.92 ns @ 10 trials
[info]  6% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=random} 697365.71 ns; σ=6835.34 ns @ 10 trials
[info]  7% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=random} 697328.94 ns; σ=9672.97 ns @ 10 trials
[info]  9% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=random} 629249.17 ns; σ=4888.51 ns @ 3 trials
[info] 11% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=random} 716253.96 ns; σ=6186.55 ns @ 3 trials
[info] 13% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=random} 865055.79 ns; σ=47791.61 ns @ 10 trials
[info] 15% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=random} 777450.04 ns; σ=8946.97 ns @ 10 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=random} 1934099.40 ns; σ=20946.71 ns @ 10 trials
[info] 19% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=random} 2086479.45 ns; σ=33093.62 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=random} 1821683.66 ns; σ=10512.12 ns @ 3 trials
[info] 22% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=random} 5582168.13 ns; σ=59413.50 ns @ 10 trials
[info] 24% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=random} 6023251.75 ns; σ=55044.79 ns @ 5 trials
[info] 26% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=random} 5820222.60 ns; σ=50309.07 ns @ 3 trials
[info] 28% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=random} 11036975.49 ns; σ=111639.45 ns @ 10 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=random} 11466432.25 ns; σ=187348.24 ns @ 10 trials
[info] 31% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=random} 9381151.18 ns; σ=41657.67 ns @ 3 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=sparse} 51912.55 ns; σ=237.36 ns @ 3 trials
[info] 35% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=sparse} 62628.30 ns; σ=818.94 ns @ 10 trials
[info] 37% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=sparse} 49451.70 ns; σ=312.17 ns @ 3 trials
[info] 39% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=sparse} 230378.32 ns; σ=2581.31 ns @ 10 trials
[info] 41% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=sparse} 221464.94 ns; σ=2432.01 ns @ 10 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=sparse} 226918.21 ns; σ=2265.56 ns @ 3 trials
[info] 44% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=sparse} 450119.10 ns; σ=2287.83 ns @ 3 trials
[info] 46% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=sparse} 438347.82 ns; σ=4053.74 ns @ 4 trials
[info] 48% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=sparse} 424193.64 ns; σ=1994.52 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=sparse} 896900.71 ns; σ=11510.02 ns @ 10 trials
[info] 52% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=sparse} 1014030.89 ns; σ=10102.54 ns @ 4 trials
[info] 54% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=sparse} 843427.77 ns; σ=9590.43 ns @ 10 trials
[info] 56% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=sparse} 2588090.93 ns; σ=14236.85 ns @ 3 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=sparse} 2473016.89 ns; σ=15454.11 ns @ 3 trials
[info] 59% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=sparse} 2412865.78 ns; σ=19639.04 ns @ 3 trials
[info] 61% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=sparse} 6747832.31 ns; σ=110812.70 ns @ 10 trials
[info] 63% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=sparse} 6906276.75 ns; σ=60678.92 ns @ 3 trials
[info] 65% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=sparse} 6426198.00 ns; σ=101967.14 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=dense} 80269.87 ns; σ=796.68 ns @ 5 trials
[info] 69% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=dense} 78817.89 ns; σ=360.85 ns @ 3 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=dense} 78596.42 ns; σ=8680.75 ns @ 10 trials
[info] 72% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=dense} 129908.68 ns; σ=373.04 ns @ 3 trials
[info] 74% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=dense} 125601.70 ns; σ=1114.09 ns @ 3 trials
[info] 76% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=dense} 181049.31 ns; σ=2214.21 ns @ 10 trials
[info] 78% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=dense} 714868.06 ns; σ=3602.42 ns @ 3 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=dense} 735854.83 ns; σ=713.52 ns @ 3 trials
[info] 81% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=dense} 685391.48 ns; σ=2538.06 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=dense} 1537683.86 ns; σ=8651.79 ns @ 3 trials
[info] 85% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=dense} 1531466.17 ns; σ=13102.24 ns @ 3 trials
[info] 87% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=dense} 1508140.13 ns; σ=26254.54 ns @ 10 trials
[info] 89% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=dense} 5296630.97 ns; σ=55376.50 ns @ 10 trials
[info] 91% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=dense} 5051204.77 ns; σ=20066.30 ns @ 3 trials
[info] 93% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=dense} 5232861.65 ns; σ=50978.34 ns @ 7 trials
[info] 94% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=dense} 10139134.75 ns; σ=250517.48 ns @ 10 trials
[info] 96% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=dense} 11001764.49 ns; σ=30661.33 ns @ 3 trials
[info] 98% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=dense} 10217056.48 ns; σ=100687.75 ns @ 6 trials
[info]
[info] mapSize mapType      benchmark      us linear runtime
[info]       2  random AlgebirdMapAdd    54.4 =
[info]       2  random     BulkMapAdd    54.6 =
[info]       2  random       SpireAdd    64.2 =
[info]       2  sparse AlgebirdMapAdd    51.9 =
[info]       2  sparse     BulkMapAdd    62.6 =
[info]       2  sparse       SpireAdd    49.5 =
[info]       2   dense AlgebirdMapAdd    80.3 =
[info]       2   dense     BulkMapAdd    78.8 =
[info]       2   dense       SpireAdd    78.6 =
[info]       4  random AlgebirdMapAdd   697.4 =
[info]       4  random     BulkMapAdd   697.3 =
[info]       4  random       SpireAdd   629.2 =
[info]       4  sparse AlgebirdMapAdd   230.4 =
[info]       4  sparse     BulkMapAdd   221.5 =
[info]       4  sparse       SpireAdd   226.9 =
[info]       4   dense AlgebirdMapAdd   129.9 =
[info]       4   dense     BulkMapAdd   125.6 =
[info]       4   dense       SpireAdd   181.0 =
[info]       8  random AlgebirdMapAdd   716.3 =
[info]       8  random     BulkMapAdd   865.1 ==
[info]       8  random       SpireAdd   777.5 ==
[info]       8  sparse AlgebirdMapAdd   450.1 =
[info]       8  sparse     BulkMapAdd   438.3 =
[info]       8  sparse       SpireAdd   424.2 =
[info]       8   dense AlgebirdMapAdd   714.9 =
[info]       8   dense     BulkMapAdd   735.9 =
[info]       8   dense       SpireAdd   685.4 =
[info]      16  random AlgebirdMapAdd  1934.1 =====
[info]      16  random     BulkMapAdd  2086.5 =====
[info]      16  random       SpireAdd  1821.7 ====
[info]      16  sparse AlgebirdMapAdd   896.9 ==
[info]      16  sparse     BulkMapAdd  1014.0 ==
[info]      16  sparse       SpireAdd   843.4 ==
[info]      16   dense AlgebirdMapAdd  1537.7 ====
[info]      16   dense     BulkMapAdd  1531.5 ====
[info]      16   dense       SpireAdd  1508.1 ===
[info]      32  random AlgebirdMapAdd  5582.2 ==============
[info]      32  random     BulkMapAdd  6023.3 ===============
[info]      32  random       SpireAdd  5820.2 ===============
[info]      32  sparse AlgebirdMapAdd  2588.1 ======
[info]      32  sparse     BulkMapAdd  2473.0 ======
[info]      32  sparse       SpireAdd  2412.9 ======
[info]      32   dense AlgebirdMapAdd  5296.6 =============
[info]      32   dense     BulkMapAdd  5051.2 =============
[info]      32   dense       SpireAdd  5232.9 =============
[info]      64  random AlgebirdMapAdd 11037.0 ============================
[info]      64  random     BulkMapAdd 11466.4 ==============================
[info]      64  random       SpireAdd  9381.2 ========================
[info]      64  sparse AlgebirdMapAdd  6747.8 =================
[info]      64  sparse     BulkMapAdd  6906.3 ==================
[info]      64  sparse       SpireAdd  6426.2 ================
[info]      64   dense AlgebirdMapAdd 10139.1 ==========================
[info]      64   dense     BulkMapAdd 11001.8 ============================
[info]      64   dense       SpireAdd 10217.1 ==========================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 647 s, completed Jun 17, 2014 1:34:28 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 15

[info] Running spire.benchmark.GcdBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=XorEuclidGcdLong} 97349259.47 ns; σ=628691.89 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=XorBinaryGcdLong} 41386103.31 ns; σ=995500.44 ns @ 10 trials
[info]
[info]        benchmark   ms linear runtime
[info] XorEuclidGcdLong 97.3 ==============================
[info] XorBinaryGcdLong 41.4 ============
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 34 s, completed Jun 17, 2014 1:48:41 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 10

[info] Running spire.benchmark.AddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddIntsDirect} 65289.06 ns; σ=12619.41 ns @ 10 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIntsGeneric} 88248.44 ns; σ=412.71 ns @ 3 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddLongsDirect} 64487.95 ns; σ=100.92 ns @ 3 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddLongsGeneric} 64329.09 ns; σ=806.25 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddFloatsDirect} 194330.23 ns; σ=1360.01 ns @ 3 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddFloatsGeneric} 192236.79 ns; σ=559.50 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddDoublesDirect} 193400.04 ns; σ=2630.53 ns @ 10 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddDoublesGeneric} 194059.60 ns; σ=1325.01 ns @ 3 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddMaybeDoublesDirect} 5166905.81 ns; σ=138464.32 ns @ 10 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect} 1596921.31 ns; σ=68916.86 ns @ 10 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric} 2262406.15 ns; σ=178358.97 ns @ 10 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddFastComplexes} 652181.31 ns; σ=6387.26 ns @ 8 trials
[info]
[info]             benchmark     us linear runtime
[info]         AddIntsDirect   65.3 =
[info]        AddIntsGeneric   88.2 =
[info]        AddLongsDirect   64.5 =
[info]       AddLongsGeneric   64.3 =
[info]       AddFloatsDirect  194.3 =
[info]      AddFloatsGeneric  192.2 =
[info]      AddDoublesDirect  193.4 =
[info]     AddDoublesGeneric  194.1 =
[info] AddMaybeDoublesDirect 5166.9 ==============================
[info]    AddComplexesDirect 1596.9 =========
[info]   AddComplexesGeneric 2262.4 =============
[info]      AddFastComplexes  652.2 ===
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 147 s, completed Jun 17, 2014 1:59:11 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 14

[info] Running spire.benchmark.RexBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=Direct, pow=10} 45796.48 ns; σ=1807.32 ns @ 10 trials
[info] 10% Scenario{vm=java, trial=0, benchmark=Generic, pow=10} 57893.72 ns; σ=2030.98 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=Direct, pow=12} 111513.82 ns; σ=498.05 ns @ 3 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=Generic, pow=12} 156363.03 ns; σ=5453.96 ns @ 10 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=Direct, pow=14} 516882.09 ns; σ=3458.86 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=Generic, pow=14} 531390.73 ns; σ=30598.39 ns @ 10 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=Direct, pow=16} 2081886.68 ns; σ=4334.56 ns @ 3 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=Generic, pow=16} 2024420.38 ns; σ=36719.75 ns @ 10 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=Direct, pow=18} 9778319.29 ns; σ=178644.12 ns @ 10 trials
[info] 90% Scenario{vm=java, trial=0, benchmark=Generic, pow=18} 7720629.78 ns; σ=75119.66 ns @ 4 trials
[info]
[info] pow benchmark     us linear runtime
[info]  10    Direct   45.8 =
[info]  10   Generic   57.9 =
[info]  12    Direct  111.5 =
[info]  12   Generic  156.4 =
[info]  14    Direct  516.9 =
[info]  14   Generic  531.4 =
[info]  16    Direct 2081.9 ======
[info]  16   Generic 2024.4 ======
[info]  18    Direct 9778.3 ==============================
[info]  18   Generic 7720.6 =======================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 143 s, completed Jun 17, 2014 2:07:15 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.spec/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.spec/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.ArrayOrderBenchmarks
 [2] spire.benchmark.MaybeAddBenchmarks
 [3] spire.benchmark.ScalaVsSpireBenchmarks
 [4] spire.benchmark.RatComparisonBenchmarks
 [5] spire.benchmark.FibBenchmarks
 [6] spire.benchmark.NaturalBenchmarks
 [7] spire.benchmark.PowBenchmarks
 [8] spire.benchmark.RationalBenchmarks
 [9] spire.benchmark.Mo5Benchmarks
 [10] spire.benchmark.AddBenchmarks
 [11] spire.benchmark.JuliaBenchmarks
 [12] spire.benchmark.RandomBenchmarks
 [13] spire.benchmark.ComplexAddBenchmarks
 [14] spire.benchmark.RexBenchmarks
 [15] spire.benchmark.GcdBenchmarks
 [16] spire.benchmark.PolynomialBenchmarks
 [17] spire.benchmark.AnyValSubtractBenchmarks
 [18] spire.benchmark.SortingBenchmarks
 [19] spire.benchmark.AnyValAddBenchmarks
 [20] spire.benchmark.SelectionBenchmarks
 [21] spire.benchmark.CForBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 1

[info] Running spire.benchmark.ArrayOrderBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=6} 45.04 ns; σ=0.45 ns @ 5 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=6} 40.14 ns; σ=1.77 ns @ 10 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=6} 37.21 ns; σ=1.56 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=10} 435.40 ns; σ=24.62 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=10} 441.71 ns; σ=21.24 ns @ 10 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=10} 406.55 ns; σ=14.07 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=14} 8568.72 ns; σ=233.68 ns @ 10 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=14} 8624.67 ns; σ=182.91 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=14} 8553.86 ns; σ=44.17 ns @ 3 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=18} 211852.00 ns; σ=2700.62 ns @ 10 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=18} 208735.34 ns; σ=1883.72 ns @ 4 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=18} 207519.86 ns; σ=2173.27 ns @ 10 trials
[info]
[info] pow   benchmark       ns linear runtime
[info]   6  AddGeneric     45.0 =
[info]   6 AddIndirect     40.1 =
[info]   6   AddDirect     37.2 =
[info]  10  AddGeneric    435.4 =
[info]  10 AddIndirect    441.7 =
[info]  10   AddDirect    406.6 =
[info]  14  AddGeneric   8568.7 =
[info]  14 AddIndirect   8624.7 =
[info]  14   AddDirect   8553.9 =
[info]  18  AddGeneric 211852.0 ==============================
[info]  18 AddIndirect 208735.3 =============================
[info]  18   AddDirect 207519.9 =============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 171 s, completed Jun 17, 2014 2:16:37 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.spec(miniboxed)$


------------------------------------------------------------------------------------------------------------------------


sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 13

[info] Running spire.benchmark.FibBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=IntFibJava} 2.21 ns; σ=0.03 ns @ 10 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=IntFibScala} 2.31 ns; σ=0.21 ns @ 10 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=IntFibGen} 594.82 ns; σ=11.20 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=LongFibJava} 70.85 ns; σ=3.99 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=LongFibScala} 68.63 ns; σ=0.57 ns @ 3 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=LongFibGen} 1193.87 ns; σ=7.49 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=BigIntegerFibJava} 23847.57 ns; σ=70.96 ns @ 3 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=BigIntegerFibGen} 26614.35 ns; σ=526.61 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=BigIntFibScala} 24130.37 ns; σ=113.30 ns @ 3 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=BigIntFibGen} 26424.52 ns; σ=169.35 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=NaturalFibGen} 15133.02 ns; σ=149.33 ns @ 10 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=SpireFib} 6402.58 ns; σ=55.23 ns @ 4 trials
[info]
[info]         benchmark       ns linear runtime
[info]        IntFibJava     2.21 =
[info]       IntFibScala     2.31 =
[info]         IntFibGen   594.82 =
[info]       LongFibJava    70.85 =
[info]      LongFibScala    68.63 =
[info]        LongFibGen  1193.87 =
[info] BigIntegerFibJava 23847.57 ==========================
[info]  BigIntegerFibGen 26614.35 ==============================
[info]    BigIntFibScala 24130.37 ===========================
[info]      BigIntFibGen 26424.52 =============================
[info]     NaturalFibGen 15133.02 =================
[info]          SpireFib  6402.58 =======
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 165 s, completed Jun 17, 2014 12:57:23 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 10

[info] Running spire.benchmark.Mo5Benchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=HBMo5} 88517967.69 ns; σ=704879.86 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=MMo5} 107511935.11 ns; σ=1075639.51 ns @ 7 trials
[info]
[info] benchmark    ms linear runtime
[info]     HBMo5  88.5 ========================
[info]      MMo5 107.5 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 27 s, completed Jun 17, 2014 1:00:40 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
19[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project

[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 19

[info] Running spire.benchmark.PowBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=LongPowForInt} 1939432.61 ns; σ=19085.32 ns @ 3 trials
[info] 14% Scenario{vm=java, trial=0, benchmark=DoublePowForInt} 16924642.57 ns; σ=144483.42 ns @ 3 trials
[info] 29% Scenario{vm=java, trial=0, benchmark=BigIntPowForInt} 17645602.64 ns; σ=76347.56 ns @ 3 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=LongPowForLong} 1683520.76 ns; σ=15063.50 ns @ 5 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=DoublePowForLong} 16844562.47 ns; σ=158923.58 ns @ 4 trials
[info] 71% Scenario{vm=java, trial=0, benchmark=BigIntPowForLong} 22702158.05 ns; σ=42786.68 ns @ 3 trials
[info] 86% Scenario{vm=java, trial=0, benchmark=DoublePowForDouble} 15902629.69 ns; σ=78015.27 ns @ 3 trials
[info]
[info]          benchmark    ms linear runtime
[info]      LongPowForInt  1.94 ==
[info]    DoublePowForInt 16.92 ======================
[info]    BigIntPowForInt 17.65 =======================
[info]     LongPowForLong  1.68 ==
[info]   DoublePowForLong 16.84 ======================
[info]   BigIntPowForLong 22.70 ==============================
[info] DoublePowForDouble 15.90 =====================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 61 s, completed Jun 17, 2014 1:06:50 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 21

[info] Running spire.benchmark.ComplexAddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect, size=500000} 7686803.34 ns; σ=387527.45 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric, size=500000} 7744826.84 ns; σ=324335.10 ns @ 10 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=AddFastComplexes, size=500000} 1552371.96 ns; σ=4530.95 ns @ 3 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesBoxed, size=500000} 2252301.99 ns; σ=13085.12 ns @ 3 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=AddFloatComplexesUnboxed, size=500000} 1579885.74 ns; σ=3603.03 ns @ 3 trials
[info]
[info]                benchmark   ms linear runtime
[info]       AddComplexesDirect 7.69 =============================
[info]      AddComplexesGeneric 7.74 ==============================
[info]         AddFastComplexes 1.55 ======
[info]   AddFloatComplexesBoxed 2.25 ========
[info] AddFloatComplexesUnboxed 1.58 ======
[info]
[info] vm: java
[info] trial: 0
[info] size: 500000
[success] Total time: 100 s, completed Jun 17, 2014 1:12:23 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 22

[info] Running spire.benchmark.MapSemigroupBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=random} 54270.43 ns; σ=420.45 ns @ 3 trials
[info]  2% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=random} 54265.03 ns; σ=428.27 ns @ 3 trials
[info]  4% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=random} 48292.87 ns; σ=699.61 ns @ 10 trials
[info]  6% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=random} 618828.14 ns; σ=2883.16 ns @ 3 trials
[info]  7% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=random} 700223.44 ns; σ=3657.48 ns @ 3 trials
[info]  9% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=random} 694227.88 ns; σ=6774.16 ns @ 10 trials
[info] 11% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=random} 672221.00 ns; σ=6482.85 ns @ 6 trials
[info] 13% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=random} 676452.72 ns; σ=6072.04 ns @ 5 trials
[info] 15% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=random} 638348.56 ns; σ=6217.57 ns @ 4 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=random} 1537115.10 ns; σ=9640.04 ns @ 3 trials
[info] 19% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=random} 1810527.72 ns; σ=44910.62 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=random} 1432557.98 ns; σ=12704.06 ns @ 3 trials
[info] 22% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=random} 4503854.70 ns; σ=154564.66 ns @ 10 trials
[info] 24% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=random} 4711493.93 ns; σ=47194.49 ns @ 4 trials
[info] 26% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=random} 4683204.35 ns; σ=46243.64 ns @ 9 trials
[info] 28% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=random} 8966073.35 ns; σ=25468.45 ns @ 3 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=random} 8941762.33 ns; σ=69055.40 ns @ 3 trials
[info] 31% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=random} 8697090.23 ns; σ=85310.06 ns @ 8 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=sparse} 73966.99 ns; σ=730.83 ns @ 5 trials
[info] 35% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=sparse} 63601.86 ns; σ=617.30 ns @ 5 trials
[info] 37% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=sparse} 48505.79 ns; σ=1537.54 ns @ 10 trials
[info] 39% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=sparse} 231863.55 ns; σ=1389.89 ns @ 3 trials
[info] 41% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=sparse} 218714.76 ns; σ=2082.99 ns @ 3 trials
[info] 43% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=sparse} 232347.38 ns; σ=5954.06 ns @ 10 trials
[info] 44% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=sparse} 400837.68 ns; σ=2198.33 ns @ 3 trials
[info] 46% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=sparse} 452831.40 ns; σ=5783.90 ns @ 10 trials
[info] 48% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=sparse} 379218.27 ns; σ=1146.07 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=sparse} 743881.66 ns; σ=7504.09 ns @ 10 trials
[info] 52% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=sparse} 844610.19 ns; σ=17606.79 ns @ 10 trials
[info] 54% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=sparse} 728812.49 ns; σ=3237.27 ns @ 3 trials
[info] 56% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=sparse} 2578405.66 ns; σ=30434.90 ns @ 10 trials
[info] 57% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=sparse} 2101002.97 ns; σ=8823.21 ns @ 3 trials
[info] 59% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=sparse} 2093555.96 ns; σ=21891.88 ns @ 10 trials
[info] 61% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=sparse} 6692343.19 ns; σ=52435.88 ns @ 3 trials
[info] 63% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=sparse} 6458962.73 ns; σ=59818.39 ns @ 6 trials
[info] 65% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=sparse} 6431053.51 ns; σ=21011.66 ns @ 3 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=2, mapType=dense} 79658.23 ns; σ=605.32 ns @ 3 trials
[info] 69% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=2, mapType=dense} 79984.87 ns; σ=2075.29 ns @ 10 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=2, mapType=dense} 61111.88 ns; σ=865.81 ns @ 10 trials
[info] 72% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=4, mapType=dense} 124692.13 ns; σ=436.61 ns @ 3 trials
[info] 74% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=4, mapType=dense} 125359.16 ns; σ=976.11 ns @ 3 trials
[info] 76% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=4, mapType=dense} 183629.21 ns; σ=7641.96 ns @ 10 trials
[info] 78% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=8, mapType=dense} 682938.22 ns; σ=33723.37 ns @ 10 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=8, mapType=dense} 633367.86 ns; σ=3148.05 ns @ 3 trials
[info] 81% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=8, mapType=dense} 642657.88 ns; σ=7254.10 ns @ 10 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=16, mapType=dense} 1468957.29 ns; σ=47743.27 ns @ 10 trials
[info] 85% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=16, mapType=dense} 1251821.68 ns; σ=31259.22 ns @ 10 trials
[info] 87% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=16, mapType=dense} 1435178.30 ns; σ=13867.35 ns @ 5 trials
[info] 89% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=32, mapType=dense} 4817490.79 ns; σ=74910.24 ns @ 10 trials
[info] 91% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=32, mapType=dense} 4815765.60 ns; σ=137407.13 ns @ 10 trials
[info] 93% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=32, mapType=dense} 4598008.20 ns; σ=26695.38 ns @ 3 trials
[info] 94% Scenario{vm=java, trial=0, benchmark=AlgebirdMapAdd, mapSize=64, mapType=dense} 9545634.32 ns; σ=162380.06 ns @ 10 trials
[info] 96% Scenario{vm=java, trial=0, benchmark=BulkMapAdd, mapSize=64, mapType=dense} 9246600.33 ns; σ=32139.76 ns @ 3 trials
[info] 98% Scenario{vm=java, trial=0, benchmark=SpireAdd, mapSize=64, mapType=dense} 9800826.63 ns; σ=220894.05 ns @ 10 trials
[info]
[info] mapSize mapType      benchmark     us linear runtime
[info]       2  random AlgebirdMapAdd   54.3 =
[info]       2  random     BulkMapAdd   54.3 =
[info]       2  random       SpireAdd   48.3 =
[info]       2  sparse AlgebirdMapAdd   74.0 =
[info]       2  sparse     BulkMapAdd   63.6 =
[info]       2  sparse       SpireAdd   48.5 =
[info]       2   dense AlgebirdMapAdd   79.7 =
[info]       2   dense     BulkMapAdd   80.0 =
[info]       2   dense       SpireAdd   61.1 =
[info]       4  random AlgebirdMapAdd  618.8 =
[info]       4  random     BulkMapAdd  700.2 ==
[info]       4  random       SpireAdd  694.2 ==
[info]       4  sparse AlgebirdMapAdd  231.9 =
[info]       4  sparse     BulkMapAdd  218.7 =
[info]       4  sparse       SpireAdd  232.3 =
[info]       4   dense AlgebirdMapAdd  124.7 =
[info]       4   dense     BulkMapAdd  125.4 =
[info]       4   dense       SpireAdd  183.6 =
[info]       8  random AlgebirdMapAdd  672.2 ==
[info]       8  random     BulkMapAdd  676.5 ==
[info]       8  random       SpireAdd  638.3 =
[info]       8  sparse AlgebirdMapAdd  400.8 =
[info]       8  sparse     BulkMapAdd  452.8 =
[info]       8  sparse       SpireAdd  379.2 =
[info]       8   dense AlgebirdMapAdd  682.9 ==
[info]       8   dense     BulkMapAdd  633.4 =
[info]       8   dense       SpireAdd  642.7 =
[info]      16  random AlgebirdMapAdd 1537.1 ====
[info]      16  random     BulkMapAdd 1810.5 =====
[info]      16  random       SpireAdd 1432.6 ====
[info]      16  sparse AlgebirdMapAdd  743.9 ==
[info]      16  sparse     BulkMapAdd  844.6 ==
[info]      16  sparse       SpireAdd  728.8 ==
[info]      16   dense AlgebirdMapAdd 1469.0 ====
[info]      16   dense     BulkMapAdd 1251.8 ===
[info]      16   dense       SpireAdd 1435.2 ====
[info]      32  random AlgebirdMapAdd 4503.9 =============
[info]      32  random     BulkMapAdd 4711.5 ==============
[info]      32  random       SpireAdd 4683.2 ==============
[info]      32  sparse AlgebirdMapAdd 2578.4 =======
[info]      32  sparse     BulkMapAdd 2101.0 ======
[info]      32  sparse       SpireAdd 2093.6 ======
[info]      32   dense AlgebirdMapAdd 4817.5 ==============
[info]      32   dense     BulkMapAdd 4815.8 ==============
[info]      32   dense       SpireAdd 4598.0 ==============
[info]      64  random AlgebirdMapAdd 8966.1 ===========================
[info]      64  random     BulkMapAdd 8941.8 ===========================
[info]      64  random       SpireAdd 8697.1 ==========================
[info]      64  sparse AlgebirdMapAdd 6692.3 ====================
[info]      64  sparse     BulkMapAdd 6459.0 ===================
[info]      64  sparse       SpireAdd 6431.1 ===================
[info]      64   dense AlgebirdMapAdd 9545.6 =============================
[info]      64   dense     BulkMapAdd 9246.6 ============================
[info]      64   dense       SpireAdd 9800.8 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 646 s, completed Jun 17, 2014 1:45:39 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 20

[info] Running spire.benchmark.GcdBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=XorEuclidGcdLong} 101112513.78 ns; σ=940059.94 ns @ 5 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=XorBinaryGcdLong} 42700406.48 ns; σ=37301.98 ns @ 3 trials
[info]
[info]        benchmark    ms linear runtime
[info] XorEuclidGcdLong 101.1 ==============================
[info] XorBinaryGcdLong  42.7 ============
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 27 s, completed Jun 17, 2014 1:52:42 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 18

[info] Running spire.benchmark.AddBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddIntsDirect} 88475.50 ns; σ=781.69 ns @ 3 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIntsGeneric} 2345362.51 ns; σ=21145.05 ns @ 3 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddLongsDirect} 64245.71 ns; σ=349.17 ns @ 3 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddLongsGeneric} 2673522.02 ns; σ=34114.92 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddFloatsDirect} 193156.96 ns; σ=1842.21 ns @ 3 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddFloatsGeneric} 615096.66 ns; σ=4484.99 ns @ 3 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddDoublesDirect} 192112.15 ns; σ=1894.80 ns @ 9 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddDoublesGeneric} 649085.64 ns; σ=8418.01 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddMaybeDoublesDirect} 5163904.98 ns; σ=104805.15 ns @ 10 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddComplexesDirect} 3303489.79 ns; σ=196273.05 ns @ 10 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddComplexesGeneric} 3340245.05 ns; σ=159168.19 ns @ 10 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddFastComplexes} 650207.04 ns; σ=5967.53 ns @ 5 trials
[info]
[info]             benchmark     us linear runtime
[info]         AddIntsDirect   88.5 =
[info]        AddIntsGeneric 2345.4 =============
[info]        AddLongsDirect   64.2 =
[info]       AddLongsGeneric 2673.5 ===============
[info]       AddFloatsDirect  193.2 =
[info]      AddFloatsGeneric  615.1 ===
[info]      AddDoublesDirect  192.1 =
[info]     AddDoublesGeneric  649.1 ===
[info] AddMaybeDoublesDirect 5163.9 ==============================
[info]    AddComplexesDirect 3303.5 ===================
[info]   AddComplexesGeneric 3340.2 ===================
[info]      AddFastComplexes  650.2 ===
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 149 s, completed Jun 17, 2014 2:02:08 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 7

[info] Running spire.benchmark.RexBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=Direct, pow=10} 47922.06 ns; σ=7647.19 ns @ 10 trials
[info] 10% Scenario{vm=java, trial=0, benchmark=Generic, pow=10} 396395.38 ns; σ=15029.66 ns @ 10 trials
[info] 20% Scenario{vm=java, trial=0, benchmark=Direct, pow=12} 170263.41 ns; σ=6534.36 ns @ 10 trials
[info] 30% Scenario{vm=java, trial=0, benchmark=Generic, pow=12} 1058461.17 ns; σ=26259.64 ns @ 10 trials
[info] 40% Scenario{vm=java, trial=0, benchmark=Direct, pow=14} 646341.41 ns; σ=9618.68 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=Generic, pow=14} 3422996.97 ns; σ=53883.55 ns @ 10 trials
[info] 60% Scenario{vm=java, trial=0, benchmark=Direct, pow=16} 2723861.49 ns; σ=19035.77 ns @ 3 trials
[info] 70% Scenario{vm=java, trial=0, benchmark=Generic, pow=16} 12765294.05 ns; σ=75651.75 ns @ 3 trials
[info] 80% Scenario{vm=java, trial=0, benchmark=Direct, pow=18} 7361945.28 ns; σ=104554.46 ns @ 10 trials
[info] 90% Scenario{vm=java, trial=0, benchmark=Generic, pow=18} 48629542.10 ns; σ=2113920.07 ns @ 10 trials
[info]
[info] benchmark pow      us linear runtime
[info]    Direct  10    47.9 =
[info]    Direct  12   170.3 =
[info]    Direct  14   646.3 =
[info]    Direct  16  2723.9 =
[info]    Direct  18  7361.9 ====
[info]   Generic  10   396.4 =
[info]   Generic  12  1058.5 =
[info]   Generic  14  3423.0 ==
[info]   Generic  16 12765.3 =======
[info]   Generic  18 48629.5 ==============================
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 150 s, completed Jun 17, 2014 2:10:11 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$ sbt benchmark/run
Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info] Loading project definition from /mnt/data1/Work/Workspace/dev/spire.gen/project
[info] Set current project to spire-aggregate (in build file:/mnt/data1/Work/Workspace/dev/spire.gen/)
[info] Generating spire/std/tuples.scala

Multiple main classes detected, select one to run:

 [1] spire.benchmark.RationalBenchmarks
 [2] spire.benchmark.SortingBenchmarks
 [3] spire.benchmark.MaybeAddBenchmarks
 [4] spire.benchmark.AnyValAddBenchmarks
 [5] spire.benchmark.SelectionBenchmarks
 [6] spire.benchmark.ArrayOrderBenchmarks
 [7] spire.benchmark.RexBenchmarks
 [8] spire.benchmark.RandomBenchmarks
 [9] spire.benchmark.PolynomialBenchmarks
 [10] spire.benchmark.Mo5Benchmarks
 [11] spire.benchmark.ScalaVsSpireBenchmarks
 [12] spire.benchmark.AnyValSubtractBenchmarks
 [13] spire.benchmark.FibBenchmarks
 [14] spire.benchmark.CForBenchmarks
 [15] spire.benchmark.NaturalBenchmarks
 [16] spire.benchmark.JuliaBenchmarks
 [17] spire.benchmark.RatComparisonBenchmarks
 [18] spire.benchmark.AddBenchmarks
 [19] spire.benchmark.PowBenchmarks
 [20] spire.benchmark.GcdBenchmarks
 [21] spire.benchmark.ComplexAddBenchmarks
 [22] spire.benchmark.MapSemigroupBenchmarks

Enter number: 6

[info] Running spire.benchmark.ArrayOrderBenchmarks
[error] Picked up _JAVA_OPTIONS: -Xms2g -Xmx2g -Xss4m -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=256m -XX:PermSize=256m -XX:+TieredCompilation -XX:+UseNUMA
[info]  0% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=6} 1070.76 ns; σ=8.42 ns @ 3 trials
[info]  8% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=6} 680.91 ns; σ=19.30 ns @ 10 trials
[info] 17% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=6} 35.99 ns; σ=0.57 ns @ 10 trials
[info] 25% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=10} 8169.64 ns; σ=180.75 ns @ 10 trials
[info] 33% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=10} 8321.09 ns; σ=113.56 ns @ 10 trials
[info] 42% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=10} 415.19 ns; σ=12.53 ns @ 10 trials
[info] 50% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=14} 281031.79 ns; σ=1882.66 ns @ 3 trials
[info] 58% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=14} 382331.14 ns; σ=8334.93 ns @ 10 trials
[info] 67% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=14} 8705.40 ns; σ=457.95 ns @ 10 trials
[info] 75% Scenario{vm=java, trial=0, benchmark=AddGeneric, pow=18} 4471017.13 ns; σ=28412.89 ns @ 3 trials
[info] 83% Scenario{vm=java, trial=0, benchmark=AddIndirect, pow=18} 4452107.87 ns; σ=43054.25 ns @ 10 trials
[info] 92% Scenario{vm=java, trial=0, benchmark=AddDirect, pow=18} 206465.77 ns; σ=2014.06 ns @ 10 trials
[info]
[info] pow   benchmark        ns linear runtime
[info]   6  AddGeneric    1070.8 =
[info]   6 AddIndirect     680.9 =
[info]   6   AddDirect      36.0 =
[info]  10  AddGeneric    8169.6 =
[info]  10 AddIndirect    8321.1 =
[info]  10   AddDirect     415.2 =
[info]  14  AddGeneric  281031.8 =
[info]  14 AddIndirect  382331.1 ==
[info]  14   AddDirect    8705.4 =
[info]  18  AddGeneric 4471017.1 ==============================
[info]  18 AddIndirect 4452107.9 =============================
[info]  18   AddDirect  206465.8 =
[info]
[info] vm: java
[info] trial: 0
[success] Total time: 174 s, completed Jun 17, 2014 2:22:18 PM
sun@sun-cpu:/mnt/data1/Work/Workspace/dev/spire.gen(miniboxed)$
